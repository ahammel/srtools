from srtools import Alignment

class FormatError(ValueError):
    """The error raised when attempting to read from improperly formatted
    data.

    """

class PileupRead(object):
    """A read in a pileup file as generated by samtools mpileup.

    """
    def __init__(self, text):
        try:
            fields = text.strip().split()
        except:
            raise FormatError("Attempted to read pileup data from non-text "
                              "input!")

        try:
            self.alignment_mapping_qualities = fields.pop()
            self.read_qualities = fields.pop()
            self.read_bases = fields.pop()
            self.reference_base = fields.pop()
            self.coordinate = int(fields.pop())
            self.chromosome_name = fields.pop()
        except IndexError:
            raise FormatError("Improperly formatted pileup read!")

    def __eq__(self, other):
        return all([self.alignment_mapping_qualities == \
                       other.alignment_mapping_qualities,
                    self.read_qualities == other.read_qualities,
                    self.read_bases == other.read_bases,
                    self.reference_base == other.reference_base,
                    self.coordinate == other.coordinate,
                    self.chromosome_name == other.chromosome_name])
    

class Pileup(Alignment):
    """A pileup file, as generated by samtools mpileup.
    
    """
    def read_generator(self):
        with open(self.data_file) as f:
            for line in f:
                yield PileupRead(line)
